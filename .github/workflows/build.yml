name: Build release workflow

on:
  push:
    tags:
    - '*'

jobs:
  create_release:
    runs-on: ubuntu-20.04
    name: Create github release
    outputs:
      upload_url: >
        ${{ steps.get_release.outputs.upload_url ||
            steps.create_release.outputs.upload_url }}
    steps:
      - name: Try to Get Release
        id: get_release
        uses: zebra-lucky/actions-js-getRelease@0.0.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ github.ref }}
      - name: Create Release
        id: create_release
        if: ${{ !steps.get_release.outputs.upload_url }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  build_with_pyinstaller:
    needs: create_release
    runs-on: ubuntu-20.04
    name: create PyInstaller build
    steps:
      - name: Set outputs for pkg_ver
        id: set_vars
        run: |
          export JM_VERSION=${{ github.ref }}
          echo "::set-output name=pkg_ver::$(echo $JM_VERSION)"
      - name: Checkout
        uses: actions/checkout@v1
      - name: build
        run: |
          ./contrib/build-linux/pyinstaller-build/build.sh
      - name: Upload sdist Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: dist/joinmarket-clientserver-{{ steps.set_vars.outputs.pkg_ver }}.tar.gz
          asset_name: joinmarket-clientserver-${{ github.ref_name }}.tar.gz
          asset_content_type: application/octet-stream
